---
import Icon from './Icon.astro';
---

<section class="skills">
	<div class="stack gap-2 lg:gap-4 box hidden">
		<Icon icon="heart" color="var(--accent-regular)" size="2.5rem" />
		<h2>Developer</h2>
		<p>
			I'm passionate about web development. Currently i'm focused on improving my skills as a frontend engineer and contributing to open source projects.
		</p>
	</div>
	<div class="stack gap-2 lg:gap-4 box hidden">
		<Icon icon="code" color="var(--accent-regular)" size="2.5rem" />
		<h2>Languages / Frameworks</h2>
		<p>I excel in front-end development with JavaScript, React, Redux, HTML5, and CSS3, and have a strong back-end foundation with Ruby, Ruby on Rails, and PostgreSQL.</p>
	</div>
	<div class="stack gap-2 lg:gap-4 box hidden">
		<Icon icon="skills" color="var(--accent-regular)" size="2.5rem" />
		<h2>Tools/Methods</h2>
		<p>I utilize Git, GitHub, Netlify, RSpec/Capybara, Jest/RTL, TDD, Dev Tools, Bootstrap, and RESTful API practices to streamline my development process.</p>
	</div>
</section>

<style>
	.box {
		border: 1px solid var(--gray-700);
		border-radius: 0.75rem;
		padding: 1.5rem;
		background-color: var(--gray-999_40);
		box-shadow: var(--shadow-sm);
		cursor: pointer;
		transition: all 0.7s ease;
	}

	.box:hover {
		transform: scale(1.05);
		box-shadow: 0 0 4px var(--gray-100);
	}

	.skills {
		display: flex;
		flex-direction: column;
		gap: 1rem;
	}

	.skills h2 {
		font-size: var(--text-lg);
	}

	.skills p {
		color: var(--gray-400);
	}

	.hidden {
		opacity: 0;
		transform: translateX(-100%);
	}

	.show {
		opacity: 1;
		transform: translateX(0);
	}

	@media (min-width: 50em) {
		.box {
			width: 20em;
			border-radius: 1.5rem;
			padding: 2.5rem;
		}

		.skills {
			display: flex;
			flex-direction: row;
		}

		.skills h2 {
			font-size: var(--text-2xl);
		}
	}
</style>

<script>
	const observer = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
			if (entry.isIntersecting) {
				entry.target.classList.add('show');
			} 
		});
	});

	const skills = document.querySelectorAll('.box');
	skills.forEach((el) => observer.observe(el));
</script>